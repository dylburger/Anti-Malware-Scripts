#!/bin/bash

# Update local mirror of all sorts of stuff

# Copyright (C) 2011 Dylan J. Sather

# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.

# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

# The default donwload directory is '/tmp'; you should change the $DOWNLOAD_DIR and appropriate subdirs, as needed
DOWNLOAD_DIR='/tmp'

EMAIL='dylan@brightroll.com'

if ! [ -d $DOWNLOAD_DIR/AntiMalware ]; then
  mkdir $DOWNLOAD_DIR/AntiMalware
fi 

cp .antiMalwareFiles .sedCommands $DOWNLOAD_DIR/AntiMalware

cd $DOWNLOAD_DIR/AntiMalware

# Read files from '.antiMalwareFiles' file
echo "Downloading Anti-Malware files..."
wget -nv -nd --mirror -i .antiMalwareFiles -a error.log

# Fetching the MBAM rules is a bit tricker. First, we have to grab the most recent definition number, which we can get from MBAM's website (the version.check is a fantastic feature!)
CUR_VER=`wget data-cdn.mbamupdates.com/v0/database/version.check -O -`

# And only then can we grab the rules...
wget -nv -nd --mirror http://data-cdn.mbamupdates.com/v0/database/data/rules.$CUR_VER.ref -a error.log

# Remove old zip archives, build new ones; one _could_ test to ensure all files are present before we 'rm' and 'zip' them, but the errors they throw are innocuous 
rm -f spybot.zip
zip spybot.zip spybotsd162.exe spybotsd_includes.exe
rm -f adaware.zip
zip adaware.zip Ad-AwareAE.exe core.zip
rm -f malwarebytes.zip
zip malwarebytes.zip mbam-setup.exe rules.*.ref
rm -f sas.zip
zip sas.zip SUPERAntiSpyware.exe SASDEFINITIONS.EXE

# We also want to remove any old lpt$???.zip archives...

# If we have more than one 'lpt' file (i.e. Sysclean defs), proceed to remove all but the newest set of defs
if [ `ls lpt* | wc -l` -gt 1 ]; then
  echo "Removing old Sysclean defs..."
  NEWEST_DEF_NUM=`ls -t lpt* | head -1 | grep -o "[0-9]\{1,\}"`
  ls lpt* | grep -v $NEWEST_DEF_NUM | xargs rm
fi

# ... and any old MBAM rules
if [ `ls rules.*.ref | wc -l` -gt 1 ]; then
  echo "Removing old MBAM rules..."
  NEWEST_RULE_NUM=`ls -t rules.*.ref | head -1 | grep -o "[0-9]\{1,\}"`
  ls rules.*.ref | grep -v $NEWEST_RULE_NUM | xargs rm
fi

# Package all of the Sysclean related stuffs and cleanup
rm -f sysclean-package.zip

unzip lpt???.zip
unzip ssapiptn.zip
zip sysclean-package.zip ssapiptn.da5 sysclean.com 'lpt$vpn'\.???

rm -f ssapiptn.da5 lpt\$vpn.??? whatsnew.txt

# List files and time modified in a log
echo "Writing download log"
ls -lt *.EXE *.exe | awk '{print $8, ": updated on", $6, "at", $7}' > download.log

# Parse through the error log and e-mail suspect URLs to $EMAIL
grep -B1 "ERROR" error.log | grep -v "[ERROR|^\-\-]" | sed 's/\:$//g' | xargs -I {} grep -n {} .antiMalwareFiles | sed -f .sedCommands >> suspectUrls 

# If 'suspectUrls' contains data, there were errors in downloading updates and we should notify the admin
if [ -s suspectUrls ]; then 
  cat suspectUrls | mail -s "Anti-Malware Script Errors" $EMAIL
fi

# Write errors to error history and remove old logs
echo -e "\nErrors on `date +%Y-%m-%d`\n" >> error.history

cat suspectUrls >> error.history
rm error.log suspectUrls
